name: build

on:
  push:
    branches: [ develop, master ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:

  testsuite:
    name: all tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.1', '8.2' ]
        minMax: [ 'composerInstallMin', 'composerInstallMax' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Composer
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s ${{ matrix.minMax }}

      - name: Composer validate
        run: Build/Scripts/runTests.sh -s composerValidate

      - name: Lint PHP
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s lintPhp

      - name: Functional tests with sqlite
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d sqlite -s functional Tests/Functional

      - name: Cleanup
        run: Build/Scripts/runTests.sh -s clean

  resources:
    runs-on: ubuntu-20.04

    name: Resources test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint SCSS
        run: Build/Scripts/runTests.sh -s lintScss

      - name: Lint Typescript
        run: Build/Scripts/runTests.sh -s lintTypescript

      - name: Test documentation build
        run: Build/Scripts/runTests.sh -s buildDocumentation

      - name: Cleanup
        run: Build/Scripts/runTests.sh -s clean

  xliff:
    runs-on: ubuntu-20.04

    name: Xliff Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run the xliff lint
        uses: TYPO3-Continuous-Integration/TYPO3-CI-Xliff-Lint@v1

  TERUpload:
    needs: [ xliff, testsuite, resources ]
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-22.04

    name: TYPO3 TER release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish to TER
        uses: tomasnorre/typo3-upload-ter@v2
        with:
          api-token: ${{ secrets.TYPO3_API_TOKEN }}
